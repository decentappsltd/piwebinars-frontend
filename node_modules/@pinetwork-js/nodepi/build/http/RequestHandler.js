"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestHandler = void 0;
const got_1 = require("got");
const Queue_1 = require("./Queue");
/**
 * The http request handler.
 */
class RequestHandler {
    manager;
    /**
     * The request queue.
     */
    queue = new Queue_1.Queue();
    constructor(manager) {
        this.manager = manager;
    }
    /**
     * Push the request to the queue waiting for its execution.
     *
     * @param gotOptions - The got options for the request.
     * @returns The payload of the request if there is one.
     */
    async push(gotOptions) {
        await this.queue.wait();
        try {
            return this.execute(gotOptions);
        }
        finally {
            this.queue.shift();
        }
    }
    /**
     * Execute the request.
     *
     * @param gotOptions - The got options for the request.
     * @param retries - The number of retries performed.
     * @returns The payload of the request if there is one.
     */
    async execute(gotOptions, retries = 0) {
        try {
            const response = await this.manager.gotClient(gotOptions);
            if (response.headers['content-type']?.startsWith('application/json')) {
                return JSON.parse(response.rawBody.toString());
            }
        }
        catch (error) {
            if (retries < this.manager.options.retryLimit && error instanceof got_1.TimeoutError) {
                return this.execute(gotOptions, retries + 1);
            }
            throw error;
        }
    }
}
exports.RequestHandler = RequestHandler;
//# sourceMappingURL=RequestHandler.js.map