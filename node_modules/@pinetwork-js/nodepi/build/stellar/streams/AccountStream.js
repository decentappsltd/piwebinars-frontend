"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountStream = void 0;
const isApplicationAccount_1 = require("../../utils/isApplicationAccount");
const BaseStream_1 = require("./BaseStream");
/**
 * Stream manager for Stellar accounts.
 */
class AccountStream extends BaseStream_1.BaseStream {
    stellar;
    constructor(stellar) {
        super(stellar);
        this.stellar = stellar;
    }
    /**
     * Handle new Stellar accounts.
     *
     * @param account - The received Stellar account.
     */
    onMessage(account) {
        if (this.stellar.account && !isApplicationAccount_1.isApplicationAccount(account, this.stellar.account.publicKey())) {
            return;
        }
        const cachedAccount = this.stellar.accounts.add(account);
        this.stellar.emit("account" /* Account */, cachedAccount);
    }
    /**
     * Listen for new Stellar accounts.
     */
    listen() {
        if (this._stop) {
            return;
        }
        this.stop = this.stellar.server
            .accounts()
            .cursor('now')
            .stream({
            onmessage: this.onMessage.bind(this),
            onerror: this.onError.bind(this),
        });
    }
}
exports.AccountStream = AccountStream;
//# sourceMappingURL=AccountStream.js.map