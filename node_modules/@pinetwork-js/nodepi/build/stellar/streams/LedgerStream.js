"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerStream = void 0;
const isApplicationLedger_1 = require("../../utils/isApplicationLedger");
const BaseStream_1 = require("./BaseStream");
/**
 * Stream manager for Stellar ledgers.
 */
class LedgerStream extends BaseStream_1.BaseStream {
    stellar;
    constructor(stellar) {
        super(stellar);
        this.stellar = stellar;
    }
    /**
     * Handle new Stellar ledgers.
     *
     * @param ledger - The received Stellar ledger.
     */
    async onMessage(ledger) {
        if (this.stellar.account && !(await isApplicationLedger_1.isApplicationLedger(ledger, this.stellar.account.publicKey()))) {
            return;
        }
        const cachedLedger = this.stellar.ledgers.add(ledger);
        this.stellar.emit("ledger" /* Ledger */, cachedLedger);
    }
    /**
     * Listen for new Stellar ledgers.
     */
    listen() {
        if (this._stop) {
            return;
        }
        this.stop = this.stellar.server
            .ledgers()
            .cursor('now')
            .stream({
            onmessage: this.onMessage.bind(this),
            onerror: this.onError.bind(this),
        });
    }
}
exports.LedgerStream = LedgerStream;
//# sourceMappingURL=LedgerStream.js.map