"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseManager = exports.isPatchable = void 0;
function isPatchable(entry) {
    return '$patch' in entry;
}
exports.isPatchable = isPatchable;
// eslint-disable-next-line no-redeclare
class BaseManager {
    client;
    hold;
    extras;
    /**
     * The cache of the manager.
     */
    cache = new Map();
    constructor(client, hold, iterable, extras) {
        this.client = client;
        this.hold = hold;
        this.extras = extras;
        if (iterable) {
            for (const item of iterable) {
                this.add(item, true);
            }
        }
    }
    /**
     * Resolves the data by its key from the cache.
     *
     * @param key - The data's key (id, etc.).
     * @returns The cached data or `undefined` if not found.
     */
    resolve(key) {
        return this.cache.get(key);
    }
}
exports.BaseManager = BaseManager;
//# sourceMappingURL=BaseManager.js.map