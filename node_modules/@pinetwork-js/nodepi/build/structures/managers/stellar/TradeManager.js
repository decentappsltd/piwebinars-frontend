"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TradeManager = void 0;
const Trade_1 = require("../../ressources/stellar/Trade");
const BaseManager_1 = require("../BaseManager");
class TradeManager extends BaseManager_1.BaseManager {
    stellar;
    constructor(stellar, iterable) {
        super(stellar.client, Trade_1.Trade, iterable);
        this.stellar = stellar;
    }
    /**
     * Adds the trade to the cache (or return the cached trade, if `cache` is true).
     *
     * @param data - The trade to add.
     * @param cache - If the trade should be cached (or cached trade patched), `true` by default.
     * @returns The resolved trade.
     */
    add(data, cache = true) {
        const existing = this.cache.get(data.id);
        if (existing) {
            if (cache && BaseManager_1.isPatchable(existing)) {
                existing.$patch(data);
            }
            return existing;
        }
        const entry = new this.hold(this.client, data);
        if (cache) {
            this.cache.set(entry.id, entry);
        }
        return entry;
    }
}
exports.TradeManager = TradeManager;
//# sourceMappingURL=TradeManager.js.map