"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimableBalanceClaimantCreatedEffect = void 0;
const ClaimableBalance_1 = require("../ClaimableBalance");
const Effect_1 = require("./Effect");
/**
 * Structure representing a Stellar Claimable Balance Claimant Created Effect.
 */
class ClaimableBalanceClaimantCreatedEffect extends Effect_1.Effect {
    /**
     * The asset available to be claimed in the SEP-11 form `asset_code:issuing_address` or `native` (for Pi).
     */
    assetInfo;
    /**
     * The amount of asset that can be claimed.
     */
    amount;
    /**
     * The predicate of the claimant.
     */
    predicate;
    /**
     * The id of the created claimable balance.
     */
    balanceId;
    constructor(client, data) {
        super(client, data);
        this.$patch(data);
    }
    $patch(data) {
        super.$patch(data);
        this.assetInfo = data.asset;
        this.amount = Number(data.amount);
        this.balanceId = data.balance_id;
        this.predicate = ClaimableBalance_1.deepPredicateChange(data.predicate);
    }
    /**
     * Get the asset if it's not `native`.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the asset instead.
     * @returns The asset if it's not `native`.
     */
    async getAsset(forceUpdate = false) {
        if (this.assetInfo === 'native') {
            return;
        }
        return this.client.stellar.assets.fetch(this.assetInfo, true, !forceUpdate);
    }
    /**
     * Get the created claimable balance.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the claimable balance instead.
     * @returns The created claimable balance.
     */
    getClaimableBalance(forceUpdate = false) {
        return this.client.stellar.claimableBalances.fetch(this.balanceId, true, !forceUpdate);
    }
}
exports.ClaimableBalanceClaimantCreatedEffect = ClaimableBalanceClaimantCreatedEffect;
//# sourceMappingURL=ClaimableBalanceClaimantCreatedEffect.js.map