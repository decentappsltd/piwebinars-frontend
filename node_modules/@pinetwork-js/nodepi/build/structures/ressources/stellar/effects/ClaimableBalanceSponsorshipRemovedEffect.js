"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimableBalanceSponsorshipRemovedEffect = void 0;
const Effect_1 = require("./Effect");
/**
 * Structure representing a Stellar Claimable Balance Sponsorship Removed Effect.
 */
class ClaimableBalanceSponsorshipRemovedEffect extends Effect_1.Effect {
    /**
     * The id of the claimable balance.
     */
    balanceId;
    /**
     * The id of the former claimable balance sponsor.
     */
    formerSponsorId;
    constructor(client, data) {
        super(client, data);
        this.$patch(data);
    }
    $patch(data) {
        super.$patch(data);
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.balanceId = data.balance_id;
        this.formerSponsorId = data.former_sponsor;
    }
    /**
     * Get the claimable balance.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the claimable balance instead.
     * @returns The claimable balance.
     */
    getClaimableBalance(forceUpdate = false) {
        return this.client.stellar.claimableBalances.fetch(this.balanceId, true, !forceUpdate);
    }
    /**
     * Get the former sponsor of the account.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the former sponsor account instead.
     * @returns The account of the former sponsor.
     */
    getFormerSponsorAccount(forceUpdate = false) {
        return this.client.stellar.accounts.fetch(this.formerSponsorId, true, !forceUpdate);
    }
}
exports.ClaimableBalanceSponsorshipRemovedEffect = ClaimableBalanceSponsorshipRemovedEffect;
//# sourceMappingURL=ClaimableBalanceSponsorshipRemovedEffect.js.map