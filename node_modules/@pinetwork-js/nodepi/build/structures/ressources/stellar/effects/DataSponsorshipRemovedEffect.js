"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSponsorshipRemovedEffect = void 0;
const Effect_1 = require("./Effect");
/**
 * Structure representing a Stellar Data Sponsorship Removed Effect.
 */
class DataSponsorshipRemovedEffect extends Effect_1.Effect {
    /**
     * The name of the data entry.
     */
    dataName;
    /**
     * The id of the former data sponsor.
     */
    formerSponsorId;
    constructor(client, data) {
        super(client, data);
        this.$patch(data);
    }
    $patch(data) {
        super.$patch(data);
        this.dataName = data.data_name;
        this.formerSponsorId = data.former_sponsor;
    }
    /**
     * Get the data entry of the account.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the data account entry instead.
     * @returns The data entry of the account.
     */
    async getDataAccountEntry(forceUpdate = false) {
        const account = await this.getAccount();
        return account.getDataEntry(this.dataName, forceUpdate);
    }
    /**
     * Get the former sponsor of the account.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the former sponsor account instead.
     * @returns The account of the former sponsor.
     */
    getFormerSponsorAccount(forceUpdate = false) {
        return this.client.stellar.accounts.fetch(this.formerSponsorId, true, !forceUpdate);
    }
}
exports.DataSponsorshipRemovedEffect = DataSponsorshipRemovedEffect;
//# sourceMappingURL=DataSponsorshipRemovedEffect.js.map