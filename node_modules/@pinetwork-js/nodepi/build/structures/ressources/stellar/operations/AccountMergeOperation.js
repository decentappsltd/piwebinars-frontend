"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountMergeOperation = void 0;
const Operation_1 = require("./Operation");
/**
 * Structure representing a Stellar Account Merge Operation.
 */
class AccountMergeOperation extends Operation_1.Operation {
    /**
     * The Stellar address being removed.
     */
    removedAccountId;
    /**
     * The Stellar address receiving the deleted account’s pi.
     */
    receiverId;
    constructor(client, data) {
        super(client, data);
        this.$patch(data);
    }
    $patch(data) {
        super.$patch(data);
        this.removedAccountId = data.source_account;
        this.receiverId = data.into;
    }
    /**
     * Get the account receiving the deleted account’s pi.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the receiver account instead.
     * @returns The account receiving the deleted account’s pi.
     */
    getReceiverAccount(forceUpdate = false) {
        return this.client.stellar.accounts.fetch(this.receiverId, true, !forceUpdate);
    }
}
exports.AccountMergeOperation = AccountMergeOperation;
//# sourceMappingURL=AccountMergeOperation.js.map