import { Horizon, ServerApi } from 'stellar-sdk';
import { Client } from '../../../../clients';
import { Account } from '../Account';
import { Operation } from './Operation';
/**
 * Structure representing a Stellar Begin Sponsoring Future Reserves Operation.
 */
export declare class BeginSponsoringFutureReservesOperation extends Operation<Horizon.OperationResponseType.beginSponsoringFutureReserves, Horizon.OperationResponseTypeI.beginSponsoringFutureReserves> {
    /**
     * The id of the account which will be sponsored.
     */
    sponsoredId: string;
    constructor(client: Client, data: ServerApi.BeginSponsoringFutureReservesOperationRecord);
    $patch(data: ServerApi.BeginSponsoringFutureReservesOperationRecord): void;
    /**
     * Get the sponsored account.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the sponsored account instead.
     * @returns The sponsored account.
     */
    getSponsoredAccount(forceUpdate?: boolean): Promise<Account>;
}
