import { Horizon, ServerApi } from 'stellar-sdk';
import { Client } from '../../../../clients';
import { ClaimableBalance } from '../ClaimableBalance';
import { Operation } from './Operation';
/**
 * Structure representing a Stellar Claim Claimable Balance Operation.
 */
export declare class ClaimClaimableBalanceOperation extends Operation<Horizon.OperationResponseType.claimClaimableBalance, Horizon.OperationResponseTypeI.claimClaimableBalance> {
    /**
     * The id of the claimable balance.
     */
    balanceId: string;
    /**
     * The id of the account which claimed the balance.
     */
    claimantId: string;
    constructor(client: Client, data: ServerApi.ClaimClaimableBalanceOperationRecord);
    $patch(data: ServerApi.ClaimClaimableBalanceOperationRecord): void;
    /**
     * Get the claimed balance.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the claimable balance instead.
     * @returns The claimed balance.
     */
    getClaimableBalance(forceUpdate?: boolean): Promise<ClaimableBalance>;
    /**
     * Get the account which claimed the balance.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the claimant account instead.
     * @returns The account of the claimant.
     */
    getClaimantAccount(forceUpdate?: boolean): Promise<ClaimableBalance>;
}
