"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAccountOperation = void 0;
const Operation_1 = require("./Operation");
/**
 * Structure representing a Stellar Create Account Operation.
 */
class CreateAccountOperation extends Operation_1.Operation {
    /**
     * The amount of Pi to send to the newly created account.
     */
    startingBalance;
    /**
     * The account that funds the new account.
     */
    funderId;
    /**
     * The new account that is funded.
     */
    newAccountId;
    constructor(client, data) {
        super(client, data);
        this.$patch(data);
    }
    $patch(data) {
        super.$patch(data);
        this.newAccountId = data.account;
        this.funderId = data.funder;
        this.startingBalance = Number(data.starting_balance);
    }
    /**
     * Get the account that funds the new account.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the funder account instead.
     * @returns The account of the funder.
     */
    getFunderAccount(forceUpdate = false) {
        return this.client.stellar.accounts.fetch(this.funderId, true, !forceUpdate);
    }
    /**
     * Get the new account that is funded.
     *
     * @param forceUpdate - If set to `true`, it will not check in the cache and directly make a request to retrieve the new account instead.
     * @returns The new funded account.
     */
    getNewAccount(forceUpdate = false) {
        return this.client.stellar.accounts.fetch(this.newAccountId, true, !forceUpdate);
    }
}
exports.CreateAccountOperation = CreateAccountOperation;
//# sourceMappingURL=CreateAccountOperation.js.map