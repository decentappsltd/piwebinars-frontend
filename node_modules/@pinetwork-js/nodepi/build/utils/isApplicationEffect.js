"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isApplicationEffect = void 0;
const effects_1 = require("stellar-sdk/lib/types/effects");
function isTrade(effect) {
    return 'seller' in effect;
}
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isTrustlineFlagsUpdated(effect) {
    return effect.type_i === effects_1.EffectType.trustline_flags_updated;
}
function isApplicationEffect(effect, applicationPublicKey) {
    const isSourceAccount = effect.account === applicationPublicKey;
    if (isSourceAccount) {
        return true;
    }
    if (isTrade(effect)) {
        return effect.seller === applicationPublicKey;
    }
    else if (isTrustlineFlagsUpdated(effect)) {
        return effect.trustor === applicationPublicKey;
    }
    switch (effect.type_i) {
        case effects_1.EffectType.account_sponsorship_created:
        case effects_1.EffectType.claimable_balance_sponsorship_created:
        case effects_1.EffectType.data_sponsorship_created:
        case effects_1.EffectType.trustline_sponsorship_created: {
            return effect.sponsor === applicationPublicKey;
        }
        case effects_1.EffectType.account_sponsorship_updated:
        case effects_1.EffectType.claimable_balance_sponsorship_updated:
        case effects_1.EffectType.data_sponsorship_updated:
        case effects_1.EffectType.trustline_sponsorship_updated: {
            return effect.former_sponsor === applicationPublicKey || effect.new_sponsor === applicationPublicKey;
        }
        case effects_1.EffectType.account_sponsorship_removed:
        case effects_1.EffectType.claimable_balance_sponsorship_removed:
        case effects_1.EffectType.data_sponsorship_removed:
        case effects_1.EffectType.trustline_sponsorship_removed: {
            return effect.former_sponsor === applicationPublicKey;
        }
        case effects_1.EffectType.signer_sponsorship_created: {
            return effect.sponsor === applicationPublicKey || effect.signer === applicationPublicKey;
        }
        case effects_1.EffectType.signer_sponsorship_updated: {
            return (effect.former_sponsor === applicationPublicKey ||
                effect.new_sponsor === applicationPublicKey ||
                effect.signer === applicationPublicKey);
        }
        case effects_1.EffectType.signer_sponsorship_removed: {
            return effect.former_sponsor === applicationPublicKey || effect.signer === applicationPublicKey;
        }
        case effects_1.EffectType.signer_created:
        case effects_1.EffectType.signer_updated:
        case effects_1.EffectType.signer_removed: {
            return effect.public_key === applicationPublicKey;
        }
        case effects_1.EffectType.trustline_authorized:
        case effects_1.EffectType.trustline_authorized_to_maintain_liabilities:
        case effects_1.EffectType.trustline_deauthorized: {
            return effect.trustor === applicationPublicKey;
        }
    }
    return false;
}
exports.isApplicationEffect = isApplicationEffect;
//# sourceMappingURL=isApplicationEffect.js.map