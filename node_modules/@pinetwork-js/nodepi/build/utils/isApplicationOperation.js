"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isApplicationOperation = void 0;
const stellar_sdk_1 = require("stellar-sdk");
function isApplicationOperation(operation, applicationPublicKey) {
    const isSourceAccount = operation.source_account === applicationPublicKey;
    if (isSourceAccount) {
        return true;
    }
    switch (operation.type) {
        case stellar_sdk_1.Horizon.OperationResponseType.createAccount: {
            return operation.funder === applicationPublicKey || operation.account === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.pathPayment:
        case stellar_sdk_1.Horizon.OperationResponseType.pathPaymentStrictSend:
        case stellar_sdk_1.Horizon.OperationResponseType.payment: {
            return operation.from === applicationPublicKey || operation.to === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.setOptions: {
            return operation.signer_key === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.changeTrust:
        case stellar_sdk_1.Horizon.OperationResponseType.allowTrust: {
            return operation.trustee === applicationPublicKey || operation.trustor === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.accountMerge: {
            return operation.into === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.createClaimableBalance: {
            return operation.claimants.some((claimant) => claimant.destination === applicationPublicKey);
        }
        case stellar_sdk_1.Horizon.OperationResponseType.claimClaimableBalance: {
            return operation.claimant === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.beginSponsoringFutureReserves: {
            return operation.sponsored_id === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.endSponsoringFutureReserves: {
            return operation.begin_sponsor === applicationPublicKey;
        }
        case stellar_sdk_1.Horizon.OperationResponseType.revokeSponsorship: {
            return (operation.account_id === applicationPublicKey ||
                operation.trustline_account_id === applicationPublicKey ||
                operation.signer_account_id === applicationPublicKey);
        }
    }
    return false;
}
exports.isApplicationOperation = isApplicationOperation;
//# sourceMappingURL=isApplicationOperation.js.map